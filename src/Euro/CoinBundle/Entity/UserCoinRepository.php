<?php

namespace Euro\CoinBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Sonata\UserBundle\Model\UserInterface;

/**
 * UserCoinRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserCoinRepository extends EntityRepository {

	public function findDoublesForUser(UserInterface $user) {
		$queryBuilder = $this->createQueryBuilder('uc');
		$expr = $queryBuilder->expr();

		return $queryBuilder
						->select($expr->countDistinct('uc') . ' AS total')
						->addSelect('u.id, u.username')
						->join('uc.user', 'u')
						->where($expr->neq('uc.user', ':user'))
						->andWhere($expr->gt('uc.quantity - uc.sharing', 1))
						->groupBy('u.id')
						->orderBy('total', 'DESC')
						->addOrderBy('u.username', 'ASC')
						->setParameter('user', $user)
						->getQuery()
						->getResult();
	}

	public function findDoublesFromUser(UserInterface $user) {
		$queryBuilder = $this->createQueryBuilder('uc');
		$expr = $queryBuilder->expr();

		return $queryBuilder
						->select('uc, c, v, y, w')
						->join('uc.coin', 'c')
						->join('c.value', 'v')
						->join('c.year', 'y')
						->leftJoin('y.workshop', 'w')
						->where($expr->eq('uc.user', ':user'))
						->andWhere($expr->gt('uc.quantity - uc.sharing', 1))
						->orderBy('y.year', 'ASC')
						->addOrderBy('w.short_name', 'ASC')
						->addOrderBy('v.value', 'DESC')
						->setParameter('user', $user)
						->getQuery()
						->getResult();
	}

	public function findDoublesFromUserAndCoins(UserInterface $user, array $coins) {
		$queryBuilder = $this->createQueryBuilder('uc');
		$expr = $queryBuilder->expr();

		return $queryBuilder
						->select('uc, c, v, y, w')
						->join('uc.coin', 'c')
						->join('c.value', 'v')
						->join('c.year', 'y')
						->leftJoin('y.workshop', 'w')
						->where($expr->eq('uc.user', ':user'))
						->andWhere($expr->gt('uc.quantity - uc.sharing', 1))
						->andWhere($expr->notIn('c.id', ':coins'))
						->orderBy('y.year', 'ASC')
						->addOrderBy('w.short_name', 'ASC')
						->addOrderBy('v.value', 'DESC')
						->setParameters(array(
							'coins' => $coins,
							'user' => $user,
						))
						->getQuery()
						->getResult();
	}

}
