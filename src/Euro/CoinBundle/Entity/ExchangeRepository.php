<?php

namespace Euro\CoinBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Sonata\UserBundle\Model\UserInterface;

/**
 * ExchangeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ExchangeRepository extends EntityRepository {

	public function find($id) {
		$queryBuilder = $this->createQueryBuilder('s');
		$expr = $queryBuilder->expr();

		return $queryBuilder
						->select('s, fu, tu, c')
						->join('s.from_user', 'fu')
						->join('s.to_user', 'tu')
						->join('s.conversation', 'c')
						->where($expr->eq('s.id', ':id'))
						->setParameter('id', $id)
						->getQuery()
						->getSingleResult();
	}

	public function findForUser(UserInterface $user, $all) {
		$queryBuilder = $this->createQueryBuilder('s');
		$expr = $queryBuilder->expr();

		$queryBuilder
				->select('s, fu, tu, c')
				->join('s.from_user', 'fu')
				->join('s.to_user', 'tu')
				->join('s.conversation', 'c')
				->where($expr->eq('s.from_user', ':user'))
				->orWhere($expr->eq('s.to_user', ':user'));

		if (!$all) {
			$queryBuilder
					->andWhere($expr->eq('s.status', Exchange::STATUS_PENDING));
		} else {
			$queryBuilder
					->orderBy('s.status', 'ASC');
		}

		return $queryBuilder->addOrderBy('s.date', 'DESC')
						->setParameter('user', $user)
						->getQuery()
						->getResult();
	}

}
